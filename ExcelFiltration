# Risk of premature death from the four target NCDs Data by WHO Region 
# https://apps.who.int/gho/data/view.main.2485REG

data <-  read.table("./NCDMORT3070.csv",
                    header = TRUE,
                    sep = ",")


# Load necessary libraries
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("pheatmap")
library(tidyr)
library(dplyr)
library(ggplot2)
library(pheatmap)

# Preview the data
head(data)
colnames(data) <- c("Region", "Year", "Probability of dying 30-70", "Male Probability of dying 30-70", "Female Probability of Dying 30-70")

# Drop rows with missing values
data_clean <- data %>%
  drop_na()

# Convert categorical variables to factors (e.g., treatment, survival_status)
data_clean$Region <- as.factor(data_clean$Region)
data_clean <- data_clean %>%
  separate(`Probability of dying 30-70`, into = c("Average Probability of Dying 30-70", "Range"), sep = " \\[", extra = "drop", fill = "right") %>%
  mutate(Range = as.numeric(Range)) #range didn't work but don't need it anyways


data_clean <- data_clean %>%
  slice(-1) #remove first row because it's extra descriptors not numbers

data_clean <- data_clean %>%
  mutate(
    Region_Code = case_when(
      Region == "Global" ~ 1,
      Region == "Africa" ~ 2,
      Region == "Americas" ~ 3,
      Region == "South-East Asia" ~ 4,
      Region == "Europe" ~ 5,
      Region == "Eastern Mediterranean" ~ 6,
      Region == "Western Pacific" ~ 7,
    )
  )

# 2. Correlation Analysis (for gene expression)

str(data_clean)

data_clean$Region_Code <- as.numeric(data_clean$Region_Code)
data_clean$`Average Probability of Dying 30-70` <- as.numeric(data_clean$`Average Probability of Dying 30-70`)

data_clean <- data_clean %>%
  select(-Range)

# Select numeric columns for correlation
gene_data <- data_clean %>%
  select(where(is.numeric))

# Create a contingency table (cross-tabulation) of region_code and Probability of dying 30-70
contingency_table <- table(gene_data$Region_Code, gene_data$`Average Probability of Dying 30-70`)


# Perform the Chi-Square Test for Independence
chi_square_result <- chisq.test(contingency_table)

# Display the result of the test
print(chi_square_result)

# Check the expected frequencies to ensure the assumptions are met (at least 5 in each cell)
print(chi_square_result$expected)

# Check the p-value from the Chi-Square Test
print(chi_square_result$p.value)

# 3. ANOVA - Compare survival rates across treatments
anova_result <- aov(`Average Probability of Dying 30-70` ~ Region_Code, data = data_clean)
summary(anova_result)

# 4. t-test - Compare survival time between two regions
# Filter data for two specific treatments
# Subset the data for Region_Code values 2 and 4
subset_data <- gene_data[gene_data$Region_Code %in% c(2, 4), ]

# Perform the T-test comparing the Average Probability of Dying 30-70 between Region_Code 2 and 4
t_test_result <- t.test(`Average Probability of Dying 30-70` ~ Region_Code, data = subset_data)

# Print the result of the T-test
print(t_test_result)


# 5. Visualizations
# Probability of death by Region by year (point)
ggplot(data_clean, aes(x = Region, y = `Average Probability of Dying 30-70`, color = as.factor(Year))) +
  geom_point(size = 5, stroke = 0.5) +
  labs(title = "Proability of Survival by region, Each Year", x = "Region", y = "Probability of Dying 30-70") +
  theme_light()

#probability of dying by region across 2000-2019 (Column) 
#divide Y by 20 to get average Prob per region (each region had 20 entries)
ggplot(data_clean, aes(x = Region, y = `Average Probability of Dying 30-70`/20, fill = Year)) +
  geom_col() +  
  labs(title = "Likelihood of Dying by Region 2000-2019", x = "Region", y = "% Average Probability of Dying 30-70") +
  theme_minimal()
#Year for fill = year lets you see if any year in particular was an outlier in contributing to total average
